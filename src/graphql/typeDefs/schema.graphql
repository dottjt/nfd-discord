type Query {
  getAccountabilityMessagesStats: Stat
  getAccountabilityReactsStats: Stat
  getDbUsersStats: Stat

  getAllDbUsers(limit: Int): [DbUser]
  getAllAccountabilityReacts(limit: Int): [AccountabilityReact]
  getAllAccountabilityMessages(limit: Int): [AccountabilityMessage]
  getAllAccountabilityTally: [AccountabilityTally]

  getDbUser(id: String): DbUser
  getAccountabilityReact(id: String): AccountabilityReact
  getAccountabilityMessage(id: String): AccountabilityMessage
  getAccountabilityTally(id: String): AccountabilityTally

  getSomeFullAccountabilityMessages(limit: Int): [AccountabilityMessage]
  getSomeFullAccountabilityReacts(limit: Int): [AccountabilityReact]
  
  # Graphs
  getLineGraph(collection_type: String, from: Int, to: Int): [LineGraph]
}

type DbUser {
  id: String
  email: String
  username: String
  created_at: String
  # updated_at: String
  # discord_id: String
  # sent36HourMessage: Boolean
  # sent72HourMessage: Boolean
  # sentYesterdayPostMessage: Boolean
  # has_accepted: Boolean
  # is_team_leader: Boolean
  # neverfap_team_id: String
}

type AccountabilityMessage {
  id: String
  username: String
  content: String
  db_user: DbUser
  created_at: String
  # message_id: String
  # db_users_id: String
  # updated_at: String
}

type AccountabilityReact {
  id: String
  username: String
  emoji_id: String
  emoji_name: String
  created_at: String
  db_user: DbUser
  db_user_reacted_to: DbUser
  accountability_message: AccountabilityMessage
  # db_users_id: String
  # db_users_id_reacted_to: String
  # accountability_messages_id: String
  # updated_at: String
}

type AccountabilityTally {
  id: String
  tally_date: String
  post_message: String
  react_message: String
  total_participants: Int
  total_reacts: Int
  created_at: String
  completed: String
  # updated_at: String
}

type NeverFapLeague {
  id: String
  league_name: String
  league_server_id: String
  created_at: String
  updated_at: String
}

type NeverFapTeam {
  id: String
  team_name: String
  team_channel_id: String
  neverfap_league_id: String
  created_at: String
  updated_at: String
}

type LineGraph {
  id: String 
  color: String 
  data: [Point]
}

type Point {
  x: String
  y: Int
}

type Stat {
  total: Int
  total24Hour: Int
}